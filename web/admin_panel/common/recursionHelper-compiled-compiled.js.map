{"version":3,"sources":["recursionHelper-compiled.js"],"names":[],"mappings":";AACA,OAAO,CAAC,MAAM,CAAC,aAAa,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,iBAAiB,EAAE,CAAC,UAAU,EAAE,UAAU,QAAQ,EAAE;AAC1F,gBAAY,CAAC;;AAEb,WAAO;;;;;;;AAOH,eAAO,EAAE,UAAU,OAAO,EAAE,IAAI,EAAE;;AAE9B,gBAAI,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE;AAC1B,oBAAI,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;aACzB;;;AAAA,AAGD,gBAAI,QAAQ,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC,MAAM,EAAE,CAAC;AAC3C,gBAAI,gBAAgB;;AAAC,AAErB,mBAAO;AACH,mBAAG,EAAE,IAAI,IAAI,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI;;;;AAIvC,oBAAI,EAAE,UAAU,KAAK,EAAE,OAAO,EAAE;;AAE5B,wBAAI,CAAC,gBAAgB,EAAE;AACnB,wCAAgB,GAAG,QAAQ,CAAC,QAAQ,CAAC,CAAC;qBACzC;;AAAA,AAED,oCAAgB,CAAC,KAAK,EAAE,UAAU,KAAK,EAAE;AACrC,+BAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;qBACzB,CAAC;;;AAAC,AAGH,wBAAI,IAAI,IAAI,IAAI,CAAC,IAAI,EAAE;AACnB,4BAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;qBACpC;iBACJ;aACJ,CAAC;SACL;KACJ,CAAC;CACL,CAAC,CAAC;;;AAAC","file":"recursionHelper-compiled-compiled.js","sourcesContent":["/*global angular*/\nangular.module('app.helpers', []).factory('RecursionHelper', ['$compile', function ($compile) {\n    \"use strict\";\n\n    return {\n        /**\n         * Manually compiles the element, fixing the recursion loop.\n         * @param element\n         * @param [link] A post-link function, or an object with function(s) registered via pre and post properties.\n         * @returns {pre: *, post: RecursionHelper.post} object containing the linking functions.\n         */\n        compile: function (element, link) {\n            // Normalize the link parameter\n            if (angular.isFunction(link)) {\n                link = { post: link };\n            }\n\n            // Break the recursion loop by removing the contents\n            var contents = element.contents().remove();\n            var compiledContents;\n            //noinspection JSValidateTypes\n            return {\n                pre: link && link.pre ? link.pre : null,\n                /**\n                 * Compiles and re-adds the contents\n                 */\n                post: function (scope, element) {\n                    // Compile the contents\n                    if (!compiledContents) {\n                        compiledContents = $compile(contents);\n                    }\n                    // Re-add the compiled contents to the element\n                    compiledContents(scope, function (clone) {\n                        element.append(clone);\n                    });\n\n                    // Call the post-linking function, if any\n                    if (link && link.post) {\n                        link.post.apply(null, arguments);\n                    }\n                }\n            };\n        }\n    };\n}]);\n\n//# sourceMappingURL=recursionHelper-compiled.js.map"]}