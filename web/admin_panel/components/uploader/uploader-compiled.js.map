{"version":3,"sources":["uploader.js"],"names":[],"mappings":";AACA,OAAO,CACF,MAAM,CAAC,gBAAgB,CAAC,CACxB,SAAS,CAAC,UAAU,EAAE,QAAQ,CAAC;;;AAAC,AAGrC,SAAS,QAAQ,CAAC,IAAI,EAAE,CAAC,EAAE;AACvB,gBAAY,CAAC;;AAEb,aAAS,WAAW,CAAC,KAAK,EAAE;;;;;;;;;;;;;;KAiB3B;;AAED,aAAS,MAAM,CAAC,KAAK,EAAE,OAAO,EAAE;AAC5B,YAAI,QAAQ,GAAG,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC,CAAC;;AAErE,gBAAQ,CAAC,EAAE,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE;AACjC,aAAC,CAAC,cAAc,EAAE,CAAC;AACnB,oBAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;AACnC,mBAAO,KAAK,CAAC;SAChB,CAAC,CAAC;;AAEH,gBAAQ,CAAC,EAAE,CAAC,WAAW,EAAE,UAAU,CAAC,EAAE;AAClC,aAAC,CAAC,cAAc,EAAE,CAAC;AACnB,oBAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;AACtC,mBAAO,KAAK,CAAC;SAChB,CAAC,CAAC;;AAEH,gBAAQ,CAAC,EAAE,CAAC,MAAM,EAAE,UAAU,KAAK,EAAE;AACjC,iBAAK,CAAC,eAAe,EAAE,CAAC;AACxB,iBAAK,CAAC,cAAc,EAAE,CAAC;AACvB,oBAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;AACtC,oBAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AAClC,gBAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAClB,gBAAI,YAAY,GAAG,KAAK,CAAC,YAAY,CAAC;AACtC,gBAAI,KAAK,GAAG,YAAY,CAAC,KAAK,CAAC;;AAE/B,uBAAW,CAAC,KAAK,CAAC,CAAC;;AAEnB,mBAAO,KAAK,CAAC;SAChB,CAAC,CAAC;KACN;;AAGD,WAAO;AACH,gBAAQ,EAAE,GAAG;AACb,mBAAW,EAAE,mCAAmC;AAChD,YAAI,EAAE,MAAM;AACZ,kBAAU,EAAE,IAAI;AAChB,aAAK,EAAE,EAAE;KACZ,CAAA;CACJ;;AAED,QAAQ,CAAC,OAAO,GAAG,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC","file":"uploader-compiled.js","sourcesContent":["/*global angular*/\r\nangular\r\n    .module('app.directives')\r\n    .directive('uploader', uploader);\r\n\r\n/* @ngInject */\r\nfunction uploader($log, _) {\r\n    \"use strict\";\r\n\r\n    function handleFiles(files) {\r\n        /*files.forEach((file) => {\r\n            let imageType = /^image\\//;\r\n\r\n            if (!imageType.test(file.type.match)) {\r\n                return;\r\n            }\r\n\r\n            let img = document.createElement(\"img\");\r\n            img.classList.add(\"obj\");\r\n            img.file = file;\r\n            preview.appendChild(img); // Assuming that \"preview\" is the div output where the content will be displayed.\r\n\r\n            var reader = new FileReader();\r\n            reader.onload = (function(aImg) { return function(e) { aImg.src = e.target.result; }; })(img);\r\n            reader.readAsDataURL(file);\r\n        });*/\r\n    }\r\n\r\n    function linkFn(scope, element) {\r\n        let dropZone = angular.element(document.querySelector('.drop-zone'));\r\n\r\n        dropZone.on('dragover', function (e) {\r\n            e.preventDefault();\r\n            dropZone[0].classList.add('hover');\r\n            return false;\r\n        });\r\n\r\n        dropZone.on('dragleave', function (e) {\r\n            e.preventDefault();\r\n            dropZone[0].classList.remove('hover');\r\n            return false;\r\n        });\r\n\r\n        dropZone.on('drop', function (event) {\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n            dropZone[0].classList.remove('hover');\r\n            dropZone[0].classList.add('drop');\r\n            $log.info('sent');\r\n            let dataTransfer = event.dataTransfer;\r\n            let files = dataTransfer.files;\r\n\r\n            handleFiles(files);\r\n\r\n            return false;\r\n        });\r\n    }\r\n\r\n\r\n    return {\r\n        restrict: 'E',\r\n        templateUrl: 'components/uploader/uploader.html',\r\n        link: linkFn,\r\n        transclude: true,\r\n        scope: {}\r\n    }\r\n}\r\n\r\nuploader.$inject = ['$log', 'lodash'];"]}